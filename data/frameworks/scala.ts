import type { Framework } from "./types"

export const scalaFrameworks: Record<string, Framework> = {
  Akka: {
    name: "Akka",
    description: "Boîte à outils pour construire des applications concurrentes, distribuées et résilientes",
    usedFor: "Systèmes distribués, applications réactives, traitement de flux, microservices",
    features: [
      "Modèle d'acteur",
      "Clustering",
      "Streams pour traitement de données",
      "HTTP et gRPC",
      "Persistence et Event Sourcing",
    ],
    officialWebsite: "https://akka.io/",
    uniqueSellingPoint: "Modèle d'acteur puissant pour systèmes distribués et résilients",
    bestFor: "Applications nécessitant haute concurrence et tolérance aux pannes",
    version: "2.8",
    documentation: "https://doc.akka.io/docs/akka/current/index.html",
    resources: [
      { name: "Documentation officielle", url: "https://doc.akka.io/docs/akka/current/index.html" },
      { name: "GitHub", url: "https://github.com/akka/akka" },
      { name: "Tutoriels", url: "https://developer.lightbend.com/guides/akka-quickstart-scala/" },
    ],
  },
  "Play Framework": {
    name: "Play Framework",
    description: "Framework web haute productivité pour Scala et Java",
    usedFor: "Applications web, APIs RESTful, applications temps réel, microservices",
    features: ["Modèle MVC", "Stateless et sans blocage", "Hot reload", "Support WebSocket", "Intégration avec Akka"],
    officialWebsite: "https://www.playframework.com/",
    uniqueSellingPoint: "Framework web réactif et stateless pour applications modernes",
    bestFor: "Applications web Scala nécessitant réactivité et scalabilité",
    version: "3.0",
    documentation: "https://www.playframework.com/documentation/3.0.x/Home",
    resources: [
      { name: "Documentation officielle", url: "https://www.playframework.com/documentation/3.0.x/Home" },
      { name: "GitHub", url: "https://github.com/playframework/playframework" },
      { name: "Tutoriels", url: "https://www.playframework.com/getting-started" },
    ],
  },
  "Apache Spark": {
    name: "Apache Spark",
    description: "Moteur de traitement de données distribué et unifié",
    usedFor: "Big data, traitement par lots, streaming, machine learning, analyse de graphes",
    features: [
      "API Scala native",
      "Traitement en mémoire",
      "Streaming structuré",
      "SQL et DataFrames",
      "MLlib pour machine learning",
    ],
    officialWebsite: "https://spark.apache.org/",
    uniqueSellingPoint: "Traitement de données distribué ultra-rapide avec API Scala expressive",
    bestFor: "Applications big data nécessitant performance et expressivité",
    version: "3.5",
    documentation: "https://spark.apache.org/docs/latest/",
    resources: [
      { name: "Documentation officielle", url: "https://spark.apache.org/docs/latest/" },
      { name: "GitHub", url: "https://github.com/apache/spark" },
      { name: "Tutoriels", url: "https://spark.apache.org/examples.html" },
    ],
  },
  Cats: {
    name: "Cats",
    description: "Bibliothèque pour la programmation fonctionnelle en Scala",
    usedFor: "Applications fonctionnelles, abstractions typées, composition de fonctions",
    features: [
      "Abstractions de programmation fonctionnelle",
      "Type classes",
      "Monades et foncteurs",
      "Gestion des effets",
      "Validation fonctionnelle",
    ],
    officialWebsite: "https://typelevel.org/cats/",
    uniqueSellingPoint: "Abstractions fonctionnelles puissantes pour code Scala robuste",
    bestFor: "Applications Scala nécessitant programmation fonctionnelle pure",
    version: "2.10.0",
    documentation: "https://typelevel.org/cats/",
    resources: [
      { name: "Documentation officielle", url: "https://typelevel.org/cats/" },
      { name: "GitHub", url: "https://github.com/typelevel/cats" },
      { name: "Tutoriels", url: "https://typelevel.org/cats/tutorials/tutorials.html" },
    ],
  },
  ZIO: {
    name: "ZIO",
    description: "Bibliothèque pour la programmation asynchrone et concurrente basée sur les effets",
    usedFor: "Applications asynchrones, concurrence, gestion des ressources, applications résilientes",
    features: ["Effets typés", "Gestion des erreurs", "Concurrence structurée", "Streams", "Écosystème complet"],
    officialWebsite: "https://zio.dev/",
    uniqueSellingPoint: "Programmation basée sur les effets pour applications robustes et performantes",
    bestFor: "Applications Scala nécessitant asynchronicité et gestion des erreurs",
    version: "2.0",
    documentation: "https://zio.dev/reference/",
    resources: [
      { name: "Documentation officielle", url: "https://zio.dev/reference/" },
      { name: "GitHub", url: "https://github.com/zio/zio" },
      { name: "Tutoriels", url: "https://zio.dev/guides/" },
    ],
  },
  http4s: {
    name: "http4s",
    description: "Bibliothèque HTTP typée et fonctionnelle pour Scala",
    usedFor: "Services web, APIs RESTful, clients HTTP, microservices",
    features: [
      "API typée et fonctionnelle",
      "Intégration avec Cats et FS2",
      "Middleware composable",
      "Client et serveur HTTP",
      "Support pour streaming",
    ],
    officialWebsite: "https://http4s.org/",
    uniqueSellingPoint: "HTTP purement fonctionnel avec typage fort pour applications robustes",
    bestFor: "Applications web Scala avec approche fonctionnelle pure",
    version: "0.23.23",
    documentation: "https://http4s.org/v0.23/docs/",
    resources: [
      { name: "Documentation officielle", url: "https://http4s.org/v0.23/docs/" },
      { name: "GitHub", url: "https://github.com/http4s/http4s" },
      { name: "Tutoriels", url: "https://http4s.org/v0.23/docs/quickstart.html" },
    ],
  },
}

